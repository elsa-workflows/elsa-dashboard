@using System.Text.Json.Nodes
@using Elsa.Studio.Workflows.UI.Args
@using Elsa.Studio.Workflows.UI.Contracts
@using Elsa.Studio.Workflows.UI.Contexts
@inherits StudioComponentBase
<MudPaper Class="ma-2" Elevation="0" Outlined="true">
    <MudToolBar Dense="true">
        @{
            if (_diagramDesigner is IDiagramDesignerToolboxProvider toolboxProvider)
            {
                foreach (var toolboxComponent in toolboxProvider.GetToolboxItems(IsReadOnly))
                {
                    @toolboxComponent
                }
            }
        }
        <MudSpacer></MudSpacer>
        @CustomToolbarItems
    </MudToolBar>
</MudPaper>
<MudProgressLinear Color="@(IsProgressing ? Color.Primary : Color.Transparent)" Indeterminate="true"/>
<div class="ma-2">
    <MudBreadcrumbs Items="_breadcrumbItems" Style="padding: 6px;">
        <ItemTemplate>
            <MudLink Color="Color.Default" OnClick="@(_ => OnBreadcrumbItemClicked(context))">
                @if (context.Icon != null)
                {
                    <MudIcon Icon="@context.Icon"/>
                }
                @context.Text
            </MudLink>

        </ItemTemplate>
        <SeparatorTemplate>
            <div class="d-flex align-content-center">
                <MudIcon Icon="@Icons.Material.Outlined.NavigateNext"></MudIcon>
            </div>
        </SeparatorTemplate>
    </MudBreadcrumbs>
</div>
@_diagramDesigner?.DisplayDesigner(new DisplayContext(
    GetCurrentContainerActivity(), 
    ActivitySelected, 
    EventCallback.Factory.Create<ActivityEmbeddedPortSelectedArgs>(this, OnActivityEmbeddedPortSelected), 
    EventCallback.Factory.Create<JsonObject>(this, OnActivityDoubleClick),
    EventCallback.Factory.Create(this, OnGraphUpdated), 
    IsReadOnly, 
    _activityStats))